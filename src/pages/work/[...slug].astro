---
import { CollectionEntry, getCollection } from 'astro:content';

import BaseLayout from '../../layouts/BaseLayout.astro';
import ContactCTA from '../../components/ContactCTA.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';

interface Props {
	entry: CollectionEntry<'works'>;
}

// Generates dynamic routes for each Markdown file in src/content/works
export async function getStaticPaths() {
	const workEntries = await getCollection('works');
	return workEntries.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
	<header>
		<div class="wrapper stack gap-2">
			<a class="back-link" href="/work/" title="Back to Work">
				<Icon icon="arrow-left" /> Work
			</a>
			<Hero title={entry.data.title} align="start">
				<div class="details">
					<div class="tags">
						{entry.data.tags.map((tag) => (
							<Pill>{tag}</Pill>
						))}
					</div>
				</div>
			</Hero>
		</div>
	</header>

	<main class="stack gap-20">
		<section class="stack">
			{entry.data.img && (
				<img
					class="feature-img"
					src={entry.data.img}
					alt={entry.data.img_alt || ''}
				/>
			)}
			<div class="content text-xl">
				<Content />
			</div>
		</section>
	</main>
</BaseLayout>

<style>
	/* General Styling */
	.wrapper {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	/* Back Link */
	.back-link {
		display: none;
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}
	.back-link:hover,
	.back-link:focus {
		text-decoration-color: currentColor;
	}

	/* Hero Details */
	.details {
		display: flex;
		flex-direction: column;
		padding: 0.5rem;
		gap: 1.5rem;
		align-items: center;
	}

	.tags {
		display: flex;
		gap: 0.5rem;
	}

	/* Content Styling */
	.content {
		max-width: 50vw;
		margin-inline: auto;
	}
	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5) {
		margin: 1.5rem 0;
	}

	.content :global(img) {
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	/* Feature Image */
	.feature-img {
		clip-path: url(#clip-path);
		max-height: 45vh;
	}

	/* Blockquote Styling */
	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
	}

	/* Links within Content */
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	/* Responsive Styling */
	@media (min-width: 50em) {
		.back-link {
			display: block;
			align-self: flex-start;
		}

		.details {
			flex-direction: row;
			gap: 2.5rem;
		}

		.content :global(blockquote) {
			font-size: var(--text-2xl);
		}
	}
</style>
